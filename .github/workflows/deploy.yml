name: Deploy to Cloud Run

on:
  push:
    branches: [ main, master ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: asia-northeast1
  SERVICE: survey-poc
  REGION: asia-northeast1

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build and Push Container
        run: |-
          docker build --platform linux/amd64 -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}
          flags: '--port=8080 --memory=1Gi --cpu=1 --max-instances=10 --allow-unauthenticated --execution-environment=gen2'
          env_vars: |
            NODE_ENV=production
            DB_PROVIDER=bigquery
            NEXT_PUBLIC_DB_PROVIDER=bigquery
            BQ_PROJECT_ID=viewpers
            BQ_DATASET=surveybridge_db
            BQ_LOCATION=US
            READONLY=false
            NEXT_PUBLIC_READONLY=false
            BASIC_AUTH_USER=cmgadmin
            BASIC_AUTH_PASSWORD=crossadmin

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }} 